[
  {
    "objectID": "DescriptiveI.html",
    "href": "DescriptiveI.html",
    "title": "1  Descriptive Stats I",
    "section": "",
    "text": "1.1 Motivation\nIn today’s data-driven world, understanding the nature and classification of data is crucial for effective analysis and decision-making. Data are the building blocks of insights, providing a foundation for businesses, researchers, and policymakers to make informed choices. Whether capturing a snapshot of a specific moment, tracking changes over time, or organizing information in structured or unstructured formats, how data is collected and categorized significantly impacts how it is analyzed and interpreted. This overview highlights key types of data and their unique characteristics to help you better understand their application in various contexts.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Descriptive Stats I</span>"
    ]
  },
  {
    "objectID": "DescriptiveI.html#concepts",
    "href": "DescriptiveI.html#concepts",
    "title": "1  Descriptive Stats I",
    "section": "",
    "text": "Data and Types of Data\nData are facts and figures collected, analyzed and summarized for presentation and interpretation. Data can be classified as:\n\nCross Sectional Data refers to data collected at the same (or approximately the same) point in time. Ex: NFL standings in 1980 or Country GDP in 2015.\nTime Series Data refers to data collected over several time periods. Ex: U.S. inflation rate from 2000-2010 or Tesla deliveries from 2016-2022.\nStructured Data resides in a predefined row-column format (tidy).\nUnstructured Data do not conform to a pre-defined row-column format. Ex: Text, video, and other multimedia.\n\n\n\nData Sets, Variables and Scales of Measurement\nA data set contains all data collected for a particular study. Data sets are composed of:\n\nElements are the entities on which data are collected. Ex: Football teams, countries, and individuals.\nObservations are the set of measurements obtained for a particular element.\nVariables are a set of characteristics collected for each element.\n\n\n\n\nElements\nVariable 1\nVariable 2\n\n\n\n\nElement 1\n#\n#\n\n\nElement 2\n#\n#\n\n\nElement 3\n#\n#\n\n\n…\n…\n…\n\n\n\nThe scales of measurements determine the amount and type of information contained in each variable. In general, variables can be classified as categorical or numerical.\n\nCategorical (qualitative) data includes labels or names to identify an attribute of each element. Categorical data can be nominal or ordinal.\n\nWith nominal data, the order of the categories is arbitrary. Ex: Marital Status, Race/Ethnicity, or NFL division.\nWith ordinal data, the order or rank of the categories is meaningful. Ex: Rating, Difficulty Level, or Spice Level.\n\nNumerical (quantitative) include numerical values that indicate how many (discrete) or how much (continuous). The data can be either interval or ratio.\n\nWith interval data, the distance between values is expressed in terms of a fixed unit of measure. The zero value is arbitrary and does not represent the absence of the characteristic. Ratios are not meaningful. Ex: Temperature or Dates.\nWith ratio data, the ratio between values is meaningful. The zero value is not arbitrary and represents the absence of the characteristic. Ex: Prices, Profits, Wins.\n\n\n\n\nUseful R Functions\nBase R has some important functions that are helpful when dealing with data. Below is a list that might come handy.\n\nThe na.omit() function removes any observations that have a missing value (NA). The resulting data frame has only complete cases.\nThe nrow() and ncol() functions return the number of rows and columns respectively from a data frame.\nThe is.na() function returns a vector of True and False that specify if an entry is missing (NA) or not.\nThe summary() function returns a collection of descriptive statistics from a data frame (or vector). The function also returns whether there are any missing values (NA) in a variable.\nThe as.integer(), as.factor(), as.double(), are functions used to coerce your data into a different scale of measurement.\n\nThe dplyr package has a collection of functions that are useful for data manipulation and transformation. If you are interested in this package you can refer to @R4DS. To install, run the following command in the console install.packages(\"dplyr\").\n\nThe arrange() function allows you to sort data frames in ascending order. Pair with the desc() function to sort the data in descending order.\nThe filter() function allows you to subset the rows of your data based on a condition.\nThe select() function allows you to select a subset of variables from your data frame.\nThe mutate() function allows you to create a new variable.\nThe group_by() function allows you to group your data frame by categories present in a given variable.\nThe summarise() function allows you to summarise your data, based on groupings generated by the goup_by() function.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Descriptive Stats I</span>"
    ]
  },
  {
    "objectID": "DescriptiveI.html#exercises",
    "href": "DescriptiveI.html#exercises",
    "title": "1  Descriptive Stats I",
    "section": "1.3 Exercises",
    "text": "1.3 Exercises\nThe following exercises will help you test your knowledge on the Scales of Measurement. They will also allow you to practice some basic data “wrangling” in R. In these exercises you will:\n\nIdentify numerical and categorical data.\nClassify data according to their scale of measurement.\nSort and filter data in R.\nHandle missing values (NA’s) in R.\n\nAnswers are provided below. Try not to peak until you have a formulated your own answer and double checked your work for any mistakes.\n\nExercise 1\nA bookstore has compiled data set on their current inventory. A portion of the data is shown below:\n\n\n\nTitle\nPrice\nYear Published\nRating\n\n\n\n\nFrankenstein\n5.49\n1818\n4.2\n\n\nDracula\n7.60\n1897\n4.0\n\n\n…\n…\n…\n…\n\n\nSleepy Hollow\n6.95\n1820\n3.8\n\n\n\n\nWhich of the above variables are categorical and which are numerical?\nWhat is the measurement scale of each of the above variable?\n\n\n\nExercise 2\nA car company tracks the number of deliveries every quarter. A portion of the data is shown below:\n\n\n\nYear\nQuarter\nDeliveries\n\n\n\n\n2016\n1\n14800\n\n\n2016\n2\n14400\n\n\n…\n…\n…\n\n\n2022\n3\n343840\n\n\n\n\nWhat is the measurement scale of the Year variable? What are the strengths and weaknesses of this type of measurement scale?\nWhat is the measurement scale for the Quarter variable? What is the weakness of this type of measurement scale?\nWhat is the measurement scale for the Deliveries variable? What are the strengths of this type of measurement scale?\n\n\n\nExercise 3\nUse the airquality data set included in R for this problem.\n\nSort the data by Temp in descending order. What is the day and month of the first observation on the sorted data?\nSort the data only by Temp in descending order. Of the \\(10\\) hottest days, how many of them were in July?\nHow many missing values are there in the data set? What rows have missing values for Solar.R?\nRemove all observations that have a missing values. Create a new object called CompleteAG.\nWhen using CompleteAG, how many days was the temperature at least \\(60\\) degrees?\nWhen using CompleteAG, how many days was the temperature within [\\(55\\),\\(75\\)] degrees and an Ozone below \\(20\\)?\n\n\n\nExercise 4\nUse the Packers data set for this problem. You can find the data set at https://jagelves.github.io/Data/Packers.csv\n\nRemove the any observation that has a missing value with the na.omit() function. How many observations are left in the data set?\nDetermine the type of the Experience variable by using the typeof() function. What type is the variable?\nRemove observations that have an “R” and coerce the Experience variable to an integer using the as.integer() function. What is the total sum of years of experience?",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Descriptive Stats I</span>"
    ]
  },
  {
    "objectID": "DescriptiveI.html#answers",
    "href": "DescriptiveI.html#answers",
    "title": "1  Descriptive Stats I",
    "section": "1.4 Answers",
    "text": "1.4 Answers\n\nExercise 1\n\nThe variables Title and Rating are categorical whereas Price and Year are numerical.\nThe measurement scale is nominal for Title, ordinal for Ratio, ratio for Price, and interval for Year. Recall, that the nominal and ratio scales represent the least and most sophisticated levels of measurement, respectively.\n\n\n\nExercise 2\n\nThe variable Year is measured on the interval scale because the observations can be ranked, categorized and measured when using this kind of scale. However, there is no true zero point so we cannot calculate meaningful ratios between years.\nThe variable Quarter is measured on the ordinal scale, even though it contains numbers. It is the least sophisticated level of measurement because if we are presented with nominal data, all we can do is categorize or group the data.\nThe variable Deliveries is measured on the ratio scale. It is the strongest level of measurement because it allows us to categorize and rank the data as well as find meaningful differences between observations. Also, with a true zero point, we can interpret the ratios between observations.\n\n\n\nExercise 3\n\nThe day and month of the first observation is August 28th.\n\nThe easiest way to sort in R is by using the dplyr package. Specifically, the arrange() function within the package. Let’s also use the desc() function to make sure that the data is sorted in descending order. We can use indexing to retrieve the first row of the sorted data set.\n\nlibrary(dplyr)\nSortedAQ&lt;-arrange(airquality,desc(Temp))\nSortedAQ[1,]\n\n  Ozone Solar.R Wind Temp Month Day\n1    76     203  9.7   97     8  28\n\n\n\nOf the \\(10\\) hottest days only two were in July.\n\nWe can use the arrange() function one more time for this question. Then we can use indexing to retrieve the top \\(10\\) observations.\n\nSortedAQ2&lt;-arrange(airquality,desc(Temp))\nSortedAQ2[1:10,]\n\n   Ozone Solar.R Wind Temp Month Day\n1     76     203  9.7   97     8  28\n2     84     237  6.3   96     8  30\n3    118     225  2.3   94     8  29\n4     85     188  6.3   94     8  31\n5     NA     259 10.9   93     6  11\n6     73     183  2.8   93     9   3\n7     91     189  4.6   93     9   4\n8     NA     250  9.2   92     6  12\n9     97     267  6.3   92     7   8\n10    97     272  5.7   92     7   9\n\n\n\nThere are a total of \\(44\\) missing values. Ozone has \\(37\\) and Solar.R has \\(7\\). Rows \\(5\\), \\(6\\), \\(11\\), \\(27\\), \\(96\\), \\(97\\), \\(98\\) are missing for Solar.R.\n\nWe can easily identify missing values with the summary() function.\n\nsummary(airquality)\n\n     Ozone           Solar.R           Wind             Temp      \n Min.   :  1.00   Min.   :  7.0   Min.   : 1.700   Min.   :56.00  \n 1st Qu.: 18.00   1st Qu.:115.8   1st Qu.: 7.400   1st Qu.:72.00  \n Median : 31.50   Median :205.0   Median : 9.700   Median :79.00  \n Mean   : 42.13   Mean   :185.9   Mean   : 9.958   Mean   :77.88  \n 3rd Qu.: 63.25   3rd Qu.:258.8   3rd Qu.:11.500   3rd Qu.:85.00  \n Max.   :168.00   Max.   :334.0   Max.   :20.700   Max.   :97.00  \n NA's   :37       NA's   :7                                       \n     Month            Day      \n Min.   :5.000   Min.   : 1.0  \n 1st Qu.:6.000   1st Qu.: 8.0  \n Median :7.000   Median :16.0  \n Mean   :6.993   Mean   :15.8  \n 3rd Qu.:8.000   3rd Qu.:23.0  \n Max.   :9.000   Max.   :31.0  \n                               \n\n\nTo view the rows that have NA’s in them, we can use the is.na() function and indexing. Below we see that \\(7\\) values are missing for the Solar.R variable in the months \\(5\\) and \\(8\\) combined.\n\nairquality[is.na(airquality$Solar.R),]\n\n   Ozone Solar.R Wind Temp Month Day\n5     NA      NA 14.3   56     5   5\n6     28      NA 14.9   66     5   6\n11     7      NA  6.9   74     5  11\n27    NA      NA  8.0   57     5  27\n96    78      NA  6.9   86     8   4\n97    35      NA  7.4   85     8   5\n98    66      NA  4.6   87     8   6\n\n\n\nTo create the new object of complete observations we can use the na.omit() function.\n\n\nCompleteAQ&lt;-na.omit(airquality)\n\n\nThere were \\(107\\) days where the temperature was at least \\(60\\).\n\nUsing base R we have:\n\nnrow(CompleteAQ[CompleteAQ$Temp&gt;=60,])\n\n[1] 107\n\n\nWe can also use dplyr for this question. Specifically, using the filter() and nrow() functions we get:\n\nnrow(filter(CompleteAQ,Temp&gt;=60))\n\n[1] 107\n\n\n\nThere were \\(24\\) days where the temperature was between \\(55\\) and \\(75\\) and the ozone level was below \\(20\\).\n\nUsing base R we have:\n\nnrow(CompleteAQ[CompleteAQ$Temp&gt;55 & CompleteAQ$Temp&lt;75 & CompleteAQ$Ozone&lt;20,])\n\n[1] 24\n\n\nUsing the filter() function once more we get:\n\nnrow(filter(CompleteAQ,Temp&gt;55,Temp&lt;75,Ozone&lt;20))\n\n[1] 24\n\n\n\n\nExercise 4\n\nThere are \\(84\\) observations in the complete cases data set.\n\nLet’s import the data to R by using the read.csv() function.\n\nPackers&lt;-read.csv(\"https://jagelves.github.io/Data/Packers.csv\")\n\nWe can remove any missing observation by using the na.omit() function. We can name this new object Packers2.\n\nPackers2&lt;-na.omit(Packers)\n\nTo find the number of observations we can use the dim() function. It returns the number of observations and variables.\n\ndim(Packers2)\n\n[1] 84  8\n\n\n\nThe type is character.\n\nUse the typeof() function on the Experience variable.\n\ntypeof(Packers2$Experience)\n\n[1] \"character\"\n\n\n\nThe total sum of experience is \\(288\\).\n\nFirst, remove any observation with an R by using indexing and logicals.\n\nPackers2&lt;-Packers2[Packers2$Experience!=\"R\",]\n\nNow we can coerce the variable to an integer by using the as.integer() function.\n\nPackers2$Experience&lt;-as.integer(Packers2$Experience)\n\nLastly, calculate the sum using the sum() function.\n\nsum(Packers2$Experience)\n\n[1] 288",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Descriptive Stats I</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Business Statistics",
    "section": "",
    "text": "Introduction\n“Whatever you would make habitual, practice it; and if you would not make a thing habitual, do not practice it, but accustom yourself to something else.” Epictetus\nThe problems in this book are designed to help you master statistics and its application in R. I recommend reviewing @HOP if you need additional help learning R. Finally, I have provided a list of concepts at the beginning of every chapter. Enjoy!",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#why-r",
    "href": "index.html#why-r",
    "title": "Business Statistics",
    "section": "Why R?",
    "text": "Why R?\nWe will be using R to apply the lessons we learn in BUAD 231. R is a language and environment for statistical computing and graphics. There are several advantages to using the R software for statistical analysis and data science. Some of the main benefits include:\n\nR is a powerful and flexible programming language that allows users to manipulate and analyze data in many different ways.\nR has a large and active community of users, who have developed a wide range of packages and tools for data analysis and visualization.\nR is free and open-source, which makes it accessible to anyone who wants to use it.\nR is widely used in academia and industry, which means that there are many resources and tutorials available to help users learn how to use it.\nR is well-suited for working with large and complex datasets, and it can handle data from many different sources.\nR can be easily integrated with other tools and software, such as databases, visualization tools, and machine learning algorithms.\n\nOverall, R is a powerful and versatile tool for data analysis and data science, and it offers many benefits to users who want to work with data.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#installing-r.",
    "href": "index.html#installing-r.",
    "title": "Business Statistics",
    "section": "Installing R.",
    "text": "Installing R.\nTo install R, visit the R webpage at https://www.r-project.org/. Once in the website, click on the CRAN hyperlink.\n\n\n\n\n\n\n\n\n\nHere you can select the CRAN mirror. Scroll down until you see USA. You are free to choose any mirror you like, I recommend using the Duke University mirror.\n\n\n\n\n\n\n\n\n\nOnce you click on the hyperlink, you will be prompted to choose the download for your operating system. Depending on your operating system, choose either a Windows or Macintosh download.\n\n\n\n\n\n\n\n\n\nFollow all prompts and complete installation.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#installing-rstudio",
    "href": "index.html#installing-rstudio",
    "title": "Business Statistics",
    "section": "Installing RStudio",
    "text": "Installing RStudio\nVisit the Posit website at https://posit.co. Once on the website, hover to the top right of the screen. You will see a “Download RStudio” blue button.\n\n\n\n\n\n\n\n\n\nNext, scroll down until you reach the RStudio desktop section. Click once more on “Download RStudio”. You can now just jump to Step 2 since you have already downloaded R. Finally, choose the desired download depending on your operating system.\n\n\n\n\n\n\n\n\n\nIt is important to note that RStudio will not work if R is not installed. You can think of R as the engine and RStudio as the interface.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#posit-cloud",
    "href": "index.html#posit-cloud",
    "title": "Business Statistics",
    "section": "Posit Cloud",
    "text": "Posit Cloud\nIf you do not wish to install R, you can always use the cloud version. To do this, visit https://posit.cloud/. On the main page click on the “Sign Up” button.\n\n\n\n\n\n\n\n\n\nChoose the “Cloud Free” option and log in using your Google credentials (if you have a Google account) or sign up if you want to create a new account.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "DescriptiveI.html#key-concepts",
    "href": "DescriptiveI.html#key-concepts",
    "title": "1  Descriptive Stats I",
    "section": "1.2 Key Concepts",
    "text": "1.2 Key Concepts\n\nData and Types of Data\nData are facts and figures collected, analyzed and summarized for presentation and interpretation. Data can be classified as:\n\nCross Sectional Data refers to data collected at the same (or approximately the same) point in time. Ex: NFL standings in 1980 or Country GDP in 2015.\nTime Series Data refers to data collected over several time periods. Ex: U.S. inflation rate from 2000-2010 or Tesla deliveries from 2016-2022.\nStructured Data resides in a predefined row-column format (tidy).\nUnstructured Data do not conform to a pre-defined row-column format. Ex: Text, video, and other multimedia.\n\nExample: Consider a retail store analyzing its sales performance. If the store collects data on the total revenue generated by each location on Black Friday, it is cross-sectional data. On the other hand, if the store tracks weekly sales for the past year to observe trends, it is time series data. Structured data, like sales figures stored in spreadsheets, allows for easy comparison and analysis. Meanwhile, customer feedback gathered from social media posts and video reviews represents unstructured data, requiring advanced tools to extract meaningful insights.\n\n\nData Sets\nA data set contains all data collected for a particular study. Data sets are composed of:\n\nElements are the entities on which data are collected. Ex: Football teams, countries, and individuals.\nObservations are the set of measurements obtained for a particular element.\nVariables are a set of characteristics collected for each element.\n\n\n\n\nElements\nVariable 1\nVariable 2\n\n\n\n\nElement 1\n#\n#\n\n\nElement 2\n#\n#\n\n\nElement 3\n#\n#\n\n\n…\n…\n…\n\n\n\n\n\nVariables and Scales of Measurement\nThe scales of measurements determine the amount and type of information contained in each variable. In general, variables can be classified as categorical or numerical.\n\nCategorical (qualitative) data includes labels or names to identify an attribute of each element. Categorical data can be nominal or ordinal.\n\nWith nominal data, the order of the categories is arbitrary. Ex: Marital Status, Race/Ethnicity, or NFL division.\nWith ordinal data, the order or rank of the categories is meaningful. Ex: Rating, Difficulty Level, or Spice Level.\n\nNumerical (quantitative) include numerical values that indicate how many (discrete) or how much (continuous). The data can be either interval or ratio.\n\nWith interval data, the distance between values is expressed in terms of a fixed unit of measure. The zero value is arbitrary and does not represent the absence of the characteristic. Ratios are not meaningful. Ex: Temperature or Dates.\nWith ratio data, the ratio between values is meaningful. The zero value is not arbitrary and represents the absence of the characteristic. Ex: Prices, Profits, Wins.\n\n\n\n\nUseful R Functions\nBase R has some important functions that are helpful when dealing with data. Below is a list that might come handy.\n\nThe na.omit() function removes any observations that have a missing value (NA). The resulting data frame has only complete cases.\nThe nrow() and ncol() functions return the number of rows and columns respectively from a data frame.\nThe is.na() function returns a vector of True and False that specify if an entry is missing (NA) or not.\nThe summary() function returns a collection of descriptive statistics from a data frame (or vector). The function also returns whether there are any missing values (NA) in a variable.\nThe as.integer(), as.factor(), as.double(), are functions used to coerce your data into a different scale of measurement.\n\nThe dplyr package has a collection of functions that are useful for data manipulation and transformation. If you are interested in this package you can refer to @R4DS. To install, run the following command in the console install.packages(\"dplyr\").\n\nThe arrange() function allows you to sort data frames in ascending order. Pair with the desc() function to sort the data in descending order.\nThe filter() function allows you to subset the rows of your data based on a condition.\nThe select() function allows you to select a subset of variables from your data frame.\nThe mutate() function allows you to create a new variable.\nThe group_by() function allows you to group your data frame by categories present in a given variable.\nThe summarise() function allows you to summarise your data, based on groupings generated by the goup_by() function.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Descriptive Stats I</span>"
    ]
  }
]